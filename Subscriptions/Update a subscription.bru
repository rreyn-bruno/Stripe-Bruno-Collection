meta {
  name: Update a subscription
  type: http
  seq: 6
}

post {
  url: {{baseUrl}}/v1/subscriptions/:subscription_exposed_id
  body: formUrlEncoded
  auth: bearer
}

params:path {
  subscription_exposed_id: <string>
}

headers {
  Content-Type: application/x-www-form-urlencoded
}

auth:bearer {
  token: <Bearer Token>
}

body:form-urlencoded {
  ~add_invoice_items[0][discounts][0][coupon]: <string>
  ~add_invoice_items[0][discounts][0][discount]: <string>
  ~add_invoice_items[0][discounts][0][promotion_code]: <string>
  ~add_invoice_items[0][discounts][1][coupon]: <string>
  ~add_invoice_items[0][discounts][1][discount]: <string>
  ~add_invoice_items[0][discounts][1][promotion_code]: <string>
  ~add_invoice_items[0][price]: <string>
  ~add_invoice_items[0][price_data][currency]: <string>
  ~add_invoice_items[0][price_data][product]: <string>
  ~add_invoice_items[0][price_data][tax_behavior]: <string>
  ~add_invoice_items[0][price_data][unit_amount]: <integer>
  ~add_invoice_items[0][price_data][unit_amount_decimal]: <decimal>
  ~add_invoice_items[0][quantity]: <integer>
  ~add_invoice_items[0][tax_rates][0]: <string>
  ~add_invoice_items[0][tax_rates][1]: <string>
  ~add_invoice_items[1][discounts][0][coupon]: <string>
  ~add_invoice_items[1][discounts][0][discount]: <string>
  ~add_invoice_items[1][discounts][0][promotion_code]: <string>
  ~add_invoice_items[1][discounts][1][coupon]: <string>
  ~add_invoice_items[1][discounts][1][discount]: <string>
  ~add_invoice_items[1][discounts][1][promotion_code]: <string>
  ~add_invoice_items[1][price]: <string>
  ~add_invoice_items[1][price_data][currency]: <string>
  ~add_invoice_items[1][price_data][product]: <string>
  ~add_invoice_items[1][price_data][tax_behavior]: <string>
  ~add_invoice_items[1][price_data][unit_amount]: <integer>
  ~add_invoice_items[1][price_data][unit_amount_decimal]: <decimal>
  ~add_invoice_items[1][quantity]: <integer>
  ~add_invoice_items[1][tax_rates][0]: <string>
  ~add_invoice_items[1][tax_rates][1]: <string>
  ~automatic_tax[enabled]: <boolean>
  ~automatic_tax[liability][type]: <string>
  ~automatic_tax[liability][account]: <string>
  ~billing_cycle_anchor: <string>
  ~billing_thresholds[amount_gte]: <integer>
  ~billing_thresholds[reset_billing_cycle_anchor]: <boolean>
  ~cancel_at_period_end: <boolean>
  ~cancellation_details[comment]: <string>
  ~cancellation_details[feedback]: <string>
  ~collection_method: <string>
  ~coupon: <string>
  ~days_until_due: <integer>
  ~default_payment_method: <string>
  ~default_tax_rates[0]: <string>
  ~default_tax_rates[1]: <string>
  ~discounts[0][coupon]: <string>
  ~discounts[0][discount]: <string>
  ~discounts[0][promotion_code]: <string>
  ~discounts[1][coupon]: <string>
  ~discounts[1][discount]: <string>
  ~discounts[1][promotion_code]: <string>
  ~expand[0]: <string>
  ~expand[1]: <string>
  ~invoice_settings[account_tax_ids][0]: <string>
  ~invoice_settings[account_tax_ids][1]: <string>
  ~invoice_settings[issuer][type]: <string>
  ~invoice_settings[issuer][account]: <string>
  ~items[0][billing_thresholds][usage_gte]: <integer>
  ~items[0][clear_usage]: <boolean>
  ~items[0][deleted]: <boolean>
  ~items[0][discounts][0][coupon]: <string>
  ~items[0][discounts][0][discount]: <string>
  ~items[0][discounts][0][promotion_code]: <string>
  ~items[0][discounts][1][coupon]: <string>
  ~items[0][discounts][1][discount]: <string>
  ~items[0][discounts][1][promotion_code]: <string>
  ~items[0][id]: <string>
  ~items[0][metadata]: <object>
  ~items[0][price]: <string>
  ~items[0][price_data][currency]: <string>
  ~items[0][price_data][product]: <string>
  ~items[0][price_data][recurring][interval]: <string>
  ~items[0][price_data][recurring][interval_count]: <integer>
  ~items[0][price_data][tax_behavior]: <string>
  ~items[0][price_data][unit_amount]: <integer>
  ~items[0][price_data][unit_amount_decimal]: <decimal>
  ~items[0][quantity]: <integer>
  ~items[0][tax_rates][0]: <string>
  ~items[0][tax_rates][1]: <string>
  ~items[1][billing_thresholds][usage_gte]: <integer>
  ~items[1][clear_usage]: <boolean>
  ~items[1][deleted]: <boolean>
  ~items[1][discounts][0][coupon]: <string>
  ~items[1][discounts][0][discount]: <string>
  ~items[1][discounts][0][promotion_code]: <string>
  ~items[1][discounts][1][coupon]: <string>
  ~items[1][discounts][1][discount]: <string>
  ~items[1][discounts][1][promotion_code]: <string>
  ~items[1][id]: <string>
  ~items[1][metadata]: <object>
  ~items[1][price]: <string>
  ~items[1][price_data][currency]: <string>
  ~items[1][price_data][product]: <string>
  ~items[1][price_data][recurring][interval]: <string>
  ~items[1][price_data][recurring][interval_count]: <integer>
  ~items[1][price_data][tax_behavior]: <string>
  ~items[1][price_data][unit_amount]: <integer>
  ~items[1][price_data][unit_amount_decimal]: <decimal>
  ~items[1][quantity]: <integer>
  ~items[1][tax_rates][0]: <string>
  ~items[1][tax_rates][1]: <string>
  ~off_session: <boolean>
  ~pause_collection[behavior]: <string>
  ~pause_collection[resumes_at]: <unix-time>
  ~payment_behavior: <string>
  ~payment_settings[payment_method_options][acss_debit][mandate_options][transaction_type]: <string>
  ~payment_settings[payment_method_options][acss_debit][verification_method]: <string>
  ~payment_settings[payment_method_options][bancontact][preferred_language]: <string>
  ~payment_settings[payment_method_options][card][mandate_options][amount]: <integer>
  ~payment_settings[payment_method_options][card][mandate_options][amount_type]: <string>
  ~payment_settings[payment_method_options][card][mandate_options][description]: <string>
  ~payment_settings[payment_method_options][card][network]: <string>
  ~payment_settings[payment_method_options][card][request_three_d_secure]: <string>
  ~payment_settings[payment_method_options][customer_balance][bank_transfer][eu_bank_transfer][country]: <string>
  ~payment_settings[payment_method_options][customer_balance][bank_transfer][type]: <string>
  ~payment_settings[payment_method_options][customer_balance][funding_type]: <string>
  ~payment_settings[payment_method_options][us_bank_account][financial_connections][permissions][0]: <string>
  ~payment_settings[payment_method_options][us_bank_account][financial_connections][permissions][1]: <string>
  ~payment_settings[payment_method_options][us_bank_account][financial_connections][prefetch][0]: <string>
  ~payment_settings[payment_method_options][us_bank_account][financial_connections][prefetch][1]: <string>
  ~payment_settings[payment_method_options][us_bank_account][verification_method]: <string>
  ~payment_settings[payment_method_types][0]: <string>
  ~payment_settings[payment_method_types][1]: <string>
  ~payment_settings[save_default_payment_method]: <string>
  ~pending_invoice_item_interval[interval]: <string>
  ~pending_invoice_item_interval[interval_count]: <integer>
  ~promotion_code: <string>
  ~proration_behavior: <string>
  ~proration_date: <unix-time>
  ~transfer_data[destination]: <string>
  ~transfer_data[amount_percent]: <number>
  ~trial_from_plan: <boolean>
  ~trial_settings[end_behavior][missing_payment_method]: <string>
}

docs {
  <p>Updates an existing subscription to match the specified parameters.
  When changing prices or quantities, we optionally prorate the price we charge next month to make up for any price changes.
  To preview how the proration is calculated, use the <a href="/docs/api/invoices/upcoming">upcoming invoice</a> endpoint.</p>
  
  <p>By default, we prorate subscription changes. For example, if a customer signs up on May 1 for a <currency>100</currency> price, they’ll be billed <currency>100</currency> immediately. If on May 15 they switch to a <currency>200</currency> price, then on June 1 they’ll be billed <currency>250</currency> (<currency>200</currency> for a renewal of her subscription, plus a <currency>50</currency> prorating adjustment for half of the previous month’s <currency>100</currency> difference). Similarly, a downgrade generates a credit that is applied to the next invoice. We also prorate when you make quantity changes.</p>
  
  <p>Switching prices does not normally change the billing date or generate an immediate charge unless:</p>
  
  <ul>
  <li>The billing interval is changed (for example, from monthly to yearly).</li>
  <li>The subscription moves from free to paid, or paid to free.</li>
  <li>A trial starts or ends.</li>
  </ul>
  
  <p>In these cases, we apply a credit for the unused time on the previous price, immediately charge the customer using the new price, and reset the billing date.</p>
  
  <p>If you want to charge for an upgrade immediately, pass <code>proration_behavior</code> as <code>always_invoice</code> to create prorations, automatically invoice the customer for those proration adjustments, and attempt to collect payment. If you pass <code>create_prorations</code>, the prorations are created but not automatically invoiced. If you want to bill the customer for the prorations before the subscription’s renewal date, you need to manually <a href="/docs/api/invoices/create">invoice the customer</a>.</p>
  
  <p>If you don’t want to prorate, set the <code>proration_behavior</code> option to <code>none</code>. With this option, the customer is billed <currency>100</currency> on May 1 and <currency>200</currency> on June 1. Similarly, if you set <code>proration_behavior</code> to <code>none</code> when switching between different billing intervals (for example, from monthly to yearly), we don’t generate any credits for the old subscription’s unused time. We still reset the billing date and bill immediately for the new subscription.</p>
  
  <p>Updating the quantity on a subscription many times in an hour may result in <a href="/docs/rate-limits">rate limiting</a>. If you need to bill for a frequently changing quantity, consider integrating <a href="/docs/billing/subscriptions/usage-based">usage-based billing</a> instead.</p>
}
